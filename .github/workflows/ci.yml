name: CI/CD Pipeline

on:
  push:
    branches: [ master, main ]
  pull_request:
    branches: [ master, main ]

env:
  CI: true
  CI_SERVER: "github"
  DOCKERHUB_USERNAME: ${{ secrets.DOCKERHUB_USERNAME }}
  DOCKERHUB_TOKEN: ${{ secrets.DOCKERHUB_TOKEN }}

jobs:
  build:
    runs-on: ubuntu-latest
    if: github.repository == 'your-username/your-repo-name'

    steps:
    - name: Debug Info
      run: |
        echo "Running in GitHub Actions"
        echo "Repository: ${{ github.repository }}"
        echo "Branch: ${{ github.ref }}"
        echo "Commit: ${{ github.sha }}"
        echo "Event: ${{ github.event_name }}"
        echo "Workflow: ${{ github.workflow }}"

    - name: Checkout code
      uses: actions/checkout@v4

    - name: Cache dependencies
      id: cache
      uses: actions/cache@v3
      with:
        path: ~/.cache/pip
        key: ${{ runner.os }}-pip-${{ hashFiles('**/requirements.txt') }}
        restore-keys: |
          ${{ runner.os }}-pip-

    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: '3.9'
        cache: 'pip'

    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -r requirements.txt

    - name: Run tests
      run: |
        pip install pytest pytest-cov
        python -m pytest tests/ --cov=app --cov-report=term-missing

    - name: Run Linting
      run: |
        pip install flake8
        flake8 .

  deploy:
    needs: build
    runs-on: ubuntu-latest
    if: github.ref == 'refs/heads/master'

    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v2

    - name: Login to DockerHub
      uses: docker/login-action@v2
      with:
        username: ${{ env.DOCKERHUB_USERNAME }}
        password: ${{ env.DOCKERHUB_TOKEN }}

    - name: Build and push Docker image
      uses: docker/build-push-action@v4
      with:
        context: .
        push: true
        tags: |
          ${{ github.actor }}/task-manager:${{ github.sha }}
          ${{ github.actor }}/task-manager:latest
        build-args: |
          GIT_COMMIT=${{ github.sha }}
          GIT_REF=${{ github.ref }}
        cache-from: type=registry,ref=${{ env.DOCKERHUB_USERNAME }}/task-manager:cache
        cache-to: type=registry,ref=${{ env.DOCKERHUB_USERNAME }}/task-manager:cache,mode=max
